Application Cargo {
  basePackage = org.cargo

    Module command {

      Entity Cargo {
  		aggregateRoot
  		- @TrackingID trackingId key

  		Repository CargoRepository {
  			protected populateAssociations;
              save;
  			@TrackingID nextTrackingId();
  			detachItineray(@Cargo cargo);
  			"Delete orphaned itineraries - conceptually the responsibility
  			of the Cargo aggregate"
  			protected deleteOrphanItinerary => AccessObject;
  		}
  	}
  	"Uniquely identifies a particular cargo. Automatically generated by the application."
  	ValueObject TrackingID {
  		nogap
  		String id key databaseColumn=""
  	}
    }

    Module web{
    	Resource RegistrationResource {
    		path = "/cargoes/registration"
    		bookingFormView();
    		bookingNewCargo();
  	}
      Resource TrackingResource {
      	path = "/cargoes/tracking"
  	}
      Resource CargoesResource {
      	path = "/cargoes"
  	    trackACargo;
  	    cargoListView;
  	    requestPossibleRoutesForCargo;

  	}
      Resource CargoResource {
      	path = "/cargoes/{trackingID}"
  		cargoDetailsView;
  	}
      Resource Destination {
      	path = "/cargoes/{trackingID}/destination"
  		pickNewDestinationView();
  		changeDestination;
  	}
      Resource RoutesResource {
      	path = "/cargoes/{trackingID}/routes"
  		assignCargoToRoute;
  	}
  }
}

